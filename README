The project presents the implementation of Monitis Custom Monitor that has aim to evaluate health state of the Memcached server. 
It is fully implemented on Java and use Monitis Java SDK that wraps the Monitis Open API functionality.

The Repository contains the following
  src
    org/.../test
      MemcachedMonitor.java		Memcached cusom monitor implementation
  lib
    m_api.jar				Truncated version of Monitis Java SDK for Monitis Open API 
					  (contains only the custom monitor functionality part)
    xmemcached-1.3.2.jar		Java client for Memcached
    .....				Other necessary libraries

The Memcached monitor measures the following metrics
  - Percent of open connections to max connections 
    (conn = curr_connections / maxconns)
  - Percent of items that have been requested and not found to total number of get commands
    (get_miss = get_misses / (get_hits + get_misses))
  - Percent of items that have been requested to delete and not found to total number of delete commands
    (delete_miss = delete_misses / (delete_hits + delete_misses))
  - Percent of items that have been requested to increase and not found to total number of increase commands
    (incr_miss = incr_misses / (incr_hits + incr_misses))
  - Percent of items that have been requested to decrease and not found to total number of decrease commands
    (decr_miss = decr_misses / (decr_hits + decr_misses))
  - Percent of current number of bytes used to store items to the max accessible bytes
    (mem_usage = bytes / limit_maxbytes)
  - Percent of valid items removed from cache to free memory to current number of items stored
    (evictions = (1 - evictions / curr_items))

If you want to test it, you have to have firstly the account in the Monitis, 
next you should put some constants in the MemcachedMonitor.java (29 - 35 lines)
and replace them by your desired values.
